{"version":3,"sources":["_shared/components/CustomInput.js","_shared/components/CustomSelect.js","views/profile/Profile.js","_shared/services/Axios.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["CustomInput","label","props","useField","field","meta","htmlFor","id","name","invalid","touched","error","className","CustomSelect","validationSchema","yup","email","required","firstname","lastname","dob","phonenumber","max","department_id","notRequired","nullable","role_id","init","getColor","status","Profile","match","useState","initialValues","setInitialValues","departments","setdepartments","roles","setroles","request","setRequest","redirect","setRedirect","Role","AuthenticationService","getRole","handleRequestAccess","a","axios","post","data","console","log","useEffect","get","then","profileUrl","params","path","dataProfile","to","md","onSubmit","values","setSubmitting","patch","enableReinitialize","type","custom","disabled","indexOf","value","map","d","key","_id","r","role","color","isSubmitting","size","onClick","defaults","baseURL","process","interceptors","use","config","token","localStorageService","getAccessToken","headers","Promise","reject","module","exports","asyncGeneratorStep","gen","resolve","_next","_throw","arg","info","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"mappings":"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","file":"static/js/7.5826a320.chunk.js","sourcesContent":["import React from \"react\";\nimport { useField } from \"formik\";\nimport { CLabel, CFormGroup, CInput } from \"@coreui/react\";\n\nconst CustomInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <CFormGroup>\n      <CLabel htmlFor={props.id || props.name}>{label}</CLabel>\n\n      <CInput {...field} {...props} invalid={meta.touched && !!meta.error} />\n      {meta.touched && !!meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </CFormGroup>\n  );\n};\n\nexport default CustomInput;\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport { CLabel, CSelect, CFormGroup } from \"@coreui/react\";\n\nfunction CustomSelect({ label, ...props }) {\n  const [field, meta] = useField(props);\n\n  return (\n    <CFormGroup>\n      <CLabel htmlFor={props.id || props.name}>{label}</CLabel>\n      <CSelect {...field} {...props} invalid={meta.touched && !!meta.error} />\n      {meta.touched && !!meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </CFormGroup>\n  );\n}\n\nexport default CustomSelect;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  CRow,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormGroup,\n  CCardFooter,\n  CButton,\n  CAlert,\n  CBadge,\n} from \"@coreui/react\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"../../_shared/services/Axios\";\nimport AuthenticationService from \"../../_shared/services/AuthenticationService\";\nimport CustomInput from \"../../_shared/components/CustomInput\";\nimport CustomSelect from \"../../_shared/components/CustomSelect\";\nimport { Redirect } from \"react-router-dom\";\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .required(\"Email id is required\")\n    .email(\"Invalid email address\"),\n  firstname: yup.string().required(\"Firstname is required\"),\n  lastname: yup.string().required(\"Lastname is required\"),\n  dob: yup.date(\"Not a valid date\").required(\"DOB is required\"),\n  phonenumber: yup.string().required().max(10),\n  department_id: yup.string().notRequired().nullable(),\n  role_id: yup.string().notRequired(),\n});\n\nconst init = {\n  email: \"\",\n  firstname: \"\",\n  lastname: \"\",\n  dob: \"\",\n  phonenumber: \"\",\n  department_id: \"\",\n  role_id: \"\",\n};\n\nconst getColor = (status) => {\n  switch (status) {\n    case \"ACTIVE\":\n      return \"warning\";\n    case \"APPROVED\":\n      return \"success\";\n    case \"DECLINED\":\n      return \"danger\";\n    default:\n      break;\n  }\n};\n\nfunction Profile({ match }) {\n  const [initialValues, setInitialValues] = useState(init);\n  const [departments, setdepartments] = useState([]);\n  const [roles, setroles] = useState([]);\n  const [request, setRequest] = useState({});\n  const [redirect, setRedirect] = useState(false);\n  const Role = AuthenticationService.getRole();\n\n  const handleRequestAccess = async () => {\n    const data = await axios.post(\"/accessrequests\");\n    console.log(data.data);\n    setRequest(data.data);\n  };\n\n  useEffect(() => {\n    axios.get(\"/departments\").then((data) => {\n      setdepartments(data.data);\n    });\n\n    axios.get(\"/roles\").then((data) => {\n      setroles(data.data);\n    });\n\n    axios.get(\"/accessrequests/my\").then((data) => {\n      setRequest(data.data);\n    });\n\n    let profileUrl = \"/profile\";\n    if (match.params.id) {\n      profileUrl = profileUrl + \"/\" + match.params.id;\n    }\n\n    if (match.path !== \"/users/create\") {\n      axios.get(profileUrl).then((data) => {\n        console.log(data);\n        let dataProfile = {\n          email: \"\",\n          firstname: \"\",\n          lastname: \"\",\n          dob: \"\",\n          phonenumber: \"\",\n          department_id: \"\",\n          role_id: \"\",\n          ...data.data,\n        };\n        if (dataProfile.department_id === null) dataProfile.department_id = \"\";\n        setInitialValues(dataProfile);\n      });\n    }\n  }, [match, match.params.id]);\n\n  return redirect ? (\n    <Redirect to=\"/users\"></Redirect>\n  ) : (\n    <CRow>\n      <CCol md={8}>\n        <CCard>\n          <CCardHeader>Profile</CCardHeader>\n          <CCardBody>\n            <Formik\n              initialValues={initialValues}\n              onSubmit={(values, { setSubmitting }) => {\n                let profileUrl = \"/profile\";\n                if (match.params.id) {\n                  profileUrl = profileUrl + \"/\" + match.params.id;\n                }\n\n                if (match.path !== \"/users/create\") {\n                  axios.patch(profileUrl, values).then((data) => {\n                    console.log(data);\n                    setSubmitting(false);\n                  });\n                } else {\n                  axios.post(\"/users\", values).then((data) => {\n                    console.log(data);\n                    setSubmitting(false);\n                    setRedirect(true);\n                  });\n                }\n              }}\n              validationSchema={validationSchema}\n              enableReinitialize={true}\n            >\n              {(props) => (\n                <Form>\n                  <CustomInput label=\"Email\" id=\"email\" name=\"email\" />\n                  <CustomInput\n                    label=\"Firstname\"\n                    id=\"firstname\"\n                    name=\"firstname\"\n                  />\n                  <CustomInput label=\"Lastname\" id=\"lastname\" name=\"lastname\" />\n                  <CustomInput\n                    label=\"Date of birth\"\n                    id=\"dob\"\n                    name=\"dob\"\n                    type=\"date\"\n                  />\n                  <CustomInput\n                    label=\"Phone Number\"\n                    id=\"phonenumber\"\n                    type=\"tel\"\n                    name=\"phonenumber\"\n                  />\n                  <CustomSelect\n                    label=\"Department\"\n                    id=\"department_id\"\n                    name=\"department_id\"\n                    custom\n                    disabled={[\"MANAGER\", \"GENERAL\"].indexOf(Role) !== -1}\n                  >\n                    <option value=\"\">Choose a Department</option>\n                    {departments.map((d) => (\n                      <option key={d._id} value={d._id}>\n                        {d.name}\n                      </option>\n                    ))}\n                  </CustomSelect>\n                  <CustomSelect\n                    custom\n                    label=\"Role\"\n                    id=\"role_id\"\n                    name=\"role_id\"\n                    disabled={[\"MANAGER\", \"GENERAL\"].indexOf(Role) !== -1}\n                  >\n                    <option value=\"\">Choose a Role</option>\n                    {roles.map((r) => (\n                      <option key={r._id} value={r._id}>\n                        {r.role}\n                      </option>\n                    ))}\n                  </CustomSelect>\n                  <CFormGroup>\n                    <CButton color=\"success\" type=\"submit\">\n                      {props.isSubmitting ? \"Submitting...\" : \"Submit\"}\n                    </CButton>{\" \"}\n                    &nbsp;\n                    <CButton color=\"danger\" type=\"reset\">\n                      Reset\n                    </CButton>\n                  </CFormGroup>\n                </Form>\n              )}\n            </Formik>\n          </CCardBody>\n          <CCardFooter></CCardFooter>\n        </CCard>\n      </CCol>\n      {[\"MANAGER\", \"GENERAL\"].indexOf(Role) !== -1 ? (\n        <CCol md={4}>\n          <CCard>\n            <CCardBody className=\"text-center\">\n              {[\"GENERAL\"].indexOf(Role) !== -1 && !!request ? (\n                <CAlert color={getColor(request.status)}>\n                  Your request staus is{\" \"}\n                  <CBadge color={getColor(request.status)}>\n                    {request.status}\n                  </CBadge>\n                </CAlert>\n              ) : (\n                <CButton\n                  type=\"button\"\n                  size=\"md\"\n                  onClick={handleRequestAccess}\n                  color=\"success\"\n                >\n                  Request Elevated Access\n                </CButton>\n              )}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      ) : null}\n    </CRow>\n  );\n}\n\nexport default Profile;\n","import axios from \"axios\";\nimport localStorageService from \"./LocalStorageService\";\n\naxios.defaults.baseURL =\n  process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorageService.getAccessToken();\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\nexport default axios;\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}