{"version":3,"sources":["views/pages/login/Login.js","_shared/services/Axios.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["initialValues","username","password","validationSchema","yup","required","email","Login","formik","useFormik","onSubmit","values","axios","post","then","data","console","log","LocalStorageService","setToken","setAuthenticated","catch","error","useState","AuthenticationService","isAuthenticated","to","className","md","handleSubmit","name","type","placeholder","autoComplete","value","onChange","handleChange","onBlur","handleBlur","invalid","errors","touched","xs","color","disabled","isValid","defaults","baseURL","process","interceptors","request","use","config","token","localStorageService","getAccessToken","headers","Promise","reject","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","o","minLen","n","prototype","toString","call","slice","constructor","from","test","TypeError"],"mappings":"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","file":"static/js/8.64ba214d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport AuthenticationService from \"../../../_shared/services/AuthenticationService\";\nimport LocalStorageService from \"../../../_shared/services/LocalStorageService\";\n\nimport axios from \"../../../_shared/services/Axios\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CInvalidFeedback,\n  CLink,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst initialValues = {\n  username: \"\",\n  password: \"\",\n};\n\nconst validationSchema = yup.object({\n  username: yup\n    .string()\n    .required(\"Username is required\")\n    .email(\"Username should be a valid email\"),\n  password: yup.string().required(\"Password is required\"),\n});\n\nconst Login = () => {\n  const onSubmit = (values) => {\n    axios\n      .post(\"/auth/login\", values)\n      .then((data) => {\n        console.log(data.data);\n        LocalStorageService.setToken(data.data);\n        setAuthenticated(true);\n      })\n      .catch((error) => {\n        setAuthenticated(false);\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n  });\n\n  const [isAuthenticated, setAuthenticated] = useState(\n    AuthenticationService.isAuthenticated()\n  );\n\n  return isAuthenticated ? (\n    <Redirect to=\"/welcome\" />\n  ) : (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"6\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={formik.handleSubmit}>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        name=\"username\"\n                        value={formik.values.username}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        invalid={!!formik.errors.username}\n                      />\n                      {formik.touched.username && formik.errors.username ? (\n                        <CInvalidFeedback>\n                          {formik.errors.username}\n                        </CInvalidFeedback>\n                      ) : null}\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        autoComplete=\"current-password\"\n                        value={formik.values.password}\n                        onBlur={formik.handleBlur}\n                        onChange={formik.handleChange}\n                        invalid={!!formik.errors.password}\n                      />\n                      {formik.touched.password && formik.errors.password ? (\n                        <CInvalidFeedback>\n                          {formik.errors.password}\n                        </CInvalidFeedback>\n                      ) : null}\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton\n                          type=\"submit\"\n                          color=\"primary\"\n                          className=\"px-4\"\n                          disabled={!formik.isValid}\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        <CLink to=\"/register\">\n                          <CButton color=\"link\" className=\"px-0\">\n                            Create Account\n                          </CButton>\n                        </CLink>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\nimport localStorageService from \"./LocalStorageService\";\n\naxios.defaults.baseURL =\n  process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorageService.getAccessToken();\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\nexport default axios;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}