{"version":3,"sources":["views/users/User.js","_shared/services/Axios.js"],"names":["User","match","useState","user","setUser","useEffect","axios","get","params","id","then","data","_id","department_id","dob","email","firstname","lastname","phonenumber","role_id","department","name","role","userDetails","Object","entries","className","lg","map","index","key","value","toString","toUpperCase","to","defaults","baseURL","process","interceptors","request","use","config","token","localStorageService","getAccessToken","headers","error","Promise","reject"],"mappings":"6JAmFeA,UAvEF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACFC,mBAAS,IADP,mBACnBC,EADmB,KACbC,EADa,KAG1BC,qBAAU,WACRC,IAAMC,IAAI,UAAYN,EAAMO,OAAOC,IAAIC,MAAK,SAACC,GAAU,IAAD,EAUhDA,EAAKA,KARPC,EAFkD,EAElDA,IACAC,EAHkD,EAGlDA,cACAC,EAJkD,EAIlDA,IACAC,EALkD,EAKlDA,MACAC,EANkD,EAMlDA,UACAC,EAPkD,EAOlDA,SACAC,EARkD,EAQlDA,YACAC,EATkD,EASlDA,QAGFf,EAAQ,CACNK,GAAIG,EACJQ,WAAYP,EAAgBA,EAAcQ,KAAO,MACjDP,MACAC,QACAC,YACAC,WACAC,cACAI,KAAMH,EAAUA,EAAQG,KAAO,UAGlC,CAACrB,EAAMO,OAAOC,KAEjB,IAAMc,EAAcpB,EAChBqB,OAAOC,QAAQtB,GACf,CACE,CACE,KACA,8BACE,kBAAC,IAAD,CAAOuB,UAAU,aAAaL,KAAK,iBADrC,gBAKR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMM,GAAI,GACR,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACW,gCAAS1B,EAAMO,OAAOC,KAEjC,kBAAC,IAAD,KACE,2BAAOiB,UAAU,mCACf,+BACGH,EAAYK,KAAI,WAAeC,GAAW,IAAD,mBAAvBC,EAAuB,KAAlBC,EAAkB,KACxC,OACE,wBAAID,IAAKD,EAAMG,YACb,sCAAQF,EAAIG,gBACZ,4BACE,gCAASF,GAAS,WAO9B,kBAAC,IAAD,CAAOG,GAAG,SAASR,UAAU,mBAC3B,kBAAC,IAAD,CAAOL,KAAK,eADd,wB,iCCzEZ,+BAGAf,IAAM6B,SAASC,QACbC,wDAEF/B,IAAMgC,aAAaC,QAAQC,KACzB,SAACC,GACC,IAAMC,EAAQC,IAAoBC,iBAIlC,OAHIF,IACFD,EAAOI,QAAP,cAAkC,UAAYH,GAEzCD,KAET,SAACK,GACCC,QAAQC,OAAOF,MAIJxC,MAAf","file":"static/js/12.95c2edf4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CLink,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport axios from \"../../_shared/services/Axios\";\n\nconst User = ({ match }) => {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    axios.get(\"/users/\" + match.params.id).then((data) => {\n      const {\n        _id,\n        department_id,\n        dob,\n        email,\n        firstname,\n        lastname,\n        phonenumber,\n        role_id,\n      } = data.data;\n\n      setUser({\n        id: _id,\n        department: department_id ? department_id.name : \"N/A\",\n        dob,\n        email,\n        firstname,\n        lastname,\n        phonenumber,\n        role: role_id ? role_id.role : \"\",\n      });\n    });\n  }, [match.params.id]);\n\n  const userDetails = user\n    ? Object.entries(user)\n    : [\n        [\n          \"id\",\n          <span>\n            <CIcon className=\"text-muted\" name=\"cui-icon-ban\" /> Not found\n          </span>,\n        ],\n      ];\n  return (\n    <CRow>\n      <CCol lg={6}>\n        <CCard>\n          <CCardHeader>\n            User Id: <strong>{match.params.id}</strong>\n          </CCardHeader>\n          <CCardBody>\n            <table className=\"table table-striped table-hover\">\n              <tbody>\n                {userDetails.map(([key, value], index) => {\n                  return (\n                    <tr key={index.toString()}>\n                      <td>{`${key.toUpperCase()}`}</td>\n                      <td>\n                        <strong>{value || \"\"}</strong>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            <CLink to=\"/users\" className=\"btn btn-primary\">\n              <CIcon name=\"cil-people\"></CIcon> Back to Users\n            </CLink>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default User;\n","import axios from \"axios\";\nimport localStorageService from \"./LocalStorageService\";\n\naxios.defaults.baseURL =\n  process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorageService.getAccessToken();\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\nexport default axios;\n"],"sourceRoot":""}