{"version":3,"sources":["views/users/Users.js","_shared/services/Axios.js"],"names":["Users","columns","name","selector","sortable","cell","row","department_id","to","_id","className","size","useState","data","setData","loading","setLoading","totalRows","setTotalRows","perPage","setPerPage","fetchUsers","page","a","axios","get","response","users","count","handlePerRowsChange","newPerPage","useEffect","xl","title","progressPending","pagination","paginationServer","selectableRowsHighlight","highlightOnHover","paginationTotalRows","selectableRows","onChangeRowsPerPage","onChangePage","defaults","baseURL","process","interceptors","request","use","config","token","localStorageService","getAccessToken","headers","error","Promise","reject"],"mappings":"2MAqHeA,UA9GD,WACZ,IAAMC,EAAU,CACd,CACEC,KAAM,KACNC,SAAU,MACVC,UAAU,GAEZ,CACEF,KAAM,aACNC,SAAU,YACVC,UAAU,GAEZ,CACEF,KAAM,YACNC,SAAU,WACVC,UAAU,GAEZ,CACEF,KAAM,cACNC,SAAU,eACVC,UAAU,GAEZ,CACEF,KAAM,aACNG,KAAM,SAACC,GAAD,OACJ,8BAAOA,EAAIC,cAAgBD,EAAIC,cAAcL,KAAO,QAEtDE,UAAU,GAEZ,CACEF,KAAM,UACNE,UAAU,EACVC,KAAM,SAACC,GAAD,OACJ,oCACE,kBAAC,IAAD,CAAOE,GAAI,UAAYF,EAAIG,IAAKC,UAAU,0BACxC,kBAAC,IAAD,CAAOC,KAAK,KAAKT,KAAK,aADxB,SADF,OAKE,kBAAC,IAAD,CAAOM,GAAI,YAAcF,EAAIG,IAAKC,UAAU,0BAC1C,kBAAC,IAAD,CAAOR,KAAK,eADd,aAtCU,EA8CMU,mBAAS,IA9Cf,mBA8CXC,EA9CW,KA8CLC,EA9CK,OA+CYF,oBAAS,GA/CrB,mBA+CXG,EA/CW,KA+CFC,EA/CE,OAgDgBJ,mBAAS,GAhDzB,mBAgDXK,EAhDW,KAgDAC,EAhDA,OAiDYN,mBAAS,IAjDrB,mBAiDXO,EAjDW,KAiDFC,EAjDE,KAmDZC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBP,GAAW,GADM,SAEMQ,IAAMC,IAAN,sBAAyBH,EAAzB,qBAA0CH,IAFhD,OAEXO,EAFW,OAGjBZ,EAAQY,EAASb,KAAKc,OACtBT,EAAaQ,EAASb,KAAKe,OAC3BZ,GAAW,GALM,2CAAH,sDAYVa,EAAmB,uCAAG,WAAOC,EAAYR,GAAnB,eAAAC,EAAA,6DAC1BP,GAAW,GADe,SAGHQ,IAAMC,IAAN,sBACNH,EADM,qBACWQ,IAJR,OAGpBJ,EAHoB,OAO1BZ,EAAQY,EAASb,KAAKc,OACtBP,EAAWU,GACXd,GAAW,GATe,2CAAH,wDAgBzB,OAJAe,qBAAU,WACRV,EAAW,KACV,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMW,GAAI,IACR,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKtB,UAAU,cACb,kBAAC,IAAD,CAAOF,GAAG,gBAAgBE,UAAU,0BAClC,kBAAC,IAAD,CAAOR,KAAK,aADd,iBAIF,kBAAC,IAAD,CACED,QAASA,EACTY,KAAMA,EACNoB,MAAM,QACNC,gBAAiBnB,EACjBoB,YAAU,EACVC,kBAAgB,EAChBC,yBAAuB,EACvBC,kBAAgB,EAChBC,oBAAqBtB,EACrBuB,gBAAc,EACdC,oBAAqBZ,EACrBa,aA1Ca,SAACpB,GACxBD,EAAWC,Y,iCCnEf,+BAGAE,IAAMmB,SAASC,QACbC,wDAEFrB,IAAMsB,aAAaC,QAAQC,KACzB,SAACC,GACC,IAAMC,EAAQC,IAAoBC,iBAIlC,OAHIF,IACFD,EAAOI,QAAP,cAAkC,UAAYH,GAEzCD,KAET,SAACK,GACCC,QAAQC,OAAOF,MAIJ9B,MAAf","file":"static/js/13.b0079290.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { CCard, CCardBody, CCol, CRow, CLink } from \"@coreui/react\";\nimport DataTable from \"react-data-table-component\";\nimport axios from \"../../_shared/services/Axios\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst Users = () => {\n  const columns = [\n    {\n      name: \"Id\",\n      selector: \"_id\",\n      sortable: true,\n    },\n    {\n      name: \"First Name\",\n      selector: \"firstname\",\n      sortable: true,\n    },\n    {\n      name: \"Last Name\",\n      selector: \"lastname\",\n      sortable: true,\n    },\n    {\n      name: \"Access Type\",\n      selector: \"role_id.role\",\n      sortable: true,\n    },\n    {\n      name: \"Department\",\n      cell: (row) => (\n        <span>{row.department_id ? row.department_id.name : \"N/A\"}</span>\n      ),\n      sortable: true,\n    },\n    {\n      name: \"Actions\",\n      sortable: false,\n      cell: (row) => (\n        <>\n          <CLink to={\"/users/\" + row._id} className=\"btn btn-sm btn-primary\">\n            <CIcon size=\"sm\" name=\"cil-user\" /> View\n          </CLink>\n          &nbsp;\n          <CLink to={\"/profile/\" + row._id} className=\"btn btn-sm btn-warning\">\n            <CIcon name=\"cil-pencil\" /> Edit\n          </CLink>\n        </>\n      ),\n    },\n  ];\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n\n  const fetchUsers = async (page) => {\n    setLoading(true);\n    const response = await axios.get(`/users?page=${page}&per_page=${perPage}`);\n    setData(response.data.users);\n    setTotalRows(response.data.count);\n    setLoading(false);\n  };\n\n  const handlePageChange = (page) => {\n    fetchUsers(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    setLoading(true);\n\n    const response = await axios.get(\n      `/users?page=${page}&per_page=${newPerPage}`\n    );\n\n    setData(response.data.users);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUsers(1);\n  }, []);\n\n  return (\n    <CRow>\n      <CCol xl={12}>\n        <CCard>\n          <CCardBody>\n            <div className=\"text-right\">\n              <CLink to=\"/users/create\" className=\"btn btn-sm btn-primary\">\n                <CIcon name=\"cil-user\"></CIcon> Create User\n              </CLink>\n            </div>\n            <DataTable\n              columns={columns}\n              data={data}\n              title=\"Users\"\n              progressPending={loading}\n              pagination\n              paginationServer\n              selectableRowsHighlight\n              highlightOnHover\n              paginationTotalRows={totalRows}\n              selectableRows\n              onChangeRowsPerPage={handlePerRowsChange}\n              onChangePage={handlePageChange}\n            ></DataTable>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default Users;\n","import axios from \"axios\";\nimport localStorageService from \"./LocalStorageService\";\n\naxios.defaults.baseURL =\n  process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorageService.getAccessToken();\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\nexport default axios;\n"],"sourceRoot":""}