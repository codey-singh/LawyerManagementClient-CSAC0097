{"version":3,"sources":["views/pages/register/Register.js","_shared/services/Axios.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["initialValues","email","password","repeatPassword","firstname","lastname","dob","validationSchema","yup","required","min","test","value","this","parent","Register","useState","registered","setRegistered","formik","useFormik","onSubmit","values","axios","post","then","data","catch","error","console","log","className","md","lg","xl","color","to","handleSubmit","type","placeholder","autoComplete","name","getFieldProps","invalid","touched","errors","disabled","isValid","block","defaults","baseURL","process","interceptors","request","use","config","token","localStorageService","getAccessToken","headers","Promise","reject","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","o","minLen","n","prototype","toString","call","slice","constructor","from","TypeError"],"mappings":"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","file":"static/js/9.1e876519.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CInvalidFeedback,\n  CAlert,\n  CLink,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport axios from \"../../../_shared/services/Axios\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  repeatPassword: \"\",\n  firstname: \"\",\n  lastname: \"\",\n  dob: \"\",\n};\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .required(\"Email id is required\")\n    .email(\"Invalid email address\"),\n  password: yup.string().required(\"Password is required\").min(6),\n  repeatPassword: yup\n    .string()\n    .required(\"Confirm Password is required\")\n    .test(\"passwords-match\", \"Passwords must match.\", function (value) {\n      return this.parent.password === value;\n    }),\n  firstname: yup.string().required(\"Firstname is required\"),\n  lastname: yup.string().required(\"Lastname is required\"),\n  dob: yup.date(\"Not a valid date\").required(\"DOB is required\"),\n});\n\nconst Register = () => {\n  const [registered, setRegistered] = useState(false);\n\n  const onSubmit = (values) => {\n    axios\n      .post(\"/auth/register\", values)\n      .then((data) => {\n        setRegistered(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema,\n  });\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                {registered ? (\n                  <CAlert color=\"success\">\n                    Registered Successfully{\" \"}\n                    <CLink to=\"/login\">Go to Login page</CLink>\n                  </CAlert>\n                ) : null}\n                <CForm onSubmit={formik.handleSubmit}>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Email\"\n                      autoComplete=\"email\"\n                      name=\"email\"\n                      {...formik.getFieldProps(\"email\")}\n                      invalid={formik.touched.email && !!formik.errors.email}\n                    />\n                    {formik.touched.email && formik.errors.email ? (\n                      <CInvalidFeedback>{formik.errors.email}</CInvalidFeedback>\n                    ) : null}\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                      name=\"password\"\n                      {...formik.getFieldProps(\"password\")}\n                      invalid={\n                        formik.touched.password && !!formik.errors.password\n                      }\n                    />\n                    {formik.touched.password && formik.errors.password ? (\n                      <CInvalidFeedback>\n                        {formik.errors.password}\n                      </CInvalidFeedback>\n                    ) : null}\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                      name=\"repeatPassword\"\n                      {...formik.getFieldProps(\"repeatPassword\")}\n                      invalid={\n                        formik.touched.repeatPassword &&\n                        !!formik.errors.repeatPassword\n                      }\n                    />\n                    {formik.touched.repeatPassword &&\n                    formik.errors.repeatPassword ? (\n                      <CInvalidFeedback>\n                        {formik.errors.repeatPassword}\n                      </CInvalidFeedback>\n                    ) : null}\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                      autoComplete=\"firstname\"\n                      name=\"firstname\"\n                      {...formik.getFieldProps(\"firstname\")}\n                      invalid={\n                        formik.touched.firstname && !!formik.errors.firstname\n                      }\n                    />\n                    {formik.touched.firstname && formik.errors.firstname ? (\n                      <CInvalidFeedback>\n                        {formik.errors.firstname}\n                      </CInvalidFeedback>\n                    ) : null}\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                      autoComplete=\"lastname\"\n                      name=\"lastname\"\n                      {...formik.getFieldProps(\"lastname\")}\n                      invalid={\n                        formik.touched.lastname && !!formik.errors.lastname\n                      }\n                    />\n                    {formik.touched.lastname && formik.errors.lastname ? (\n                      <CInvalidFeedback>\n                        {formik.errors.lastname}\n                      </CInvalidFeedback>\n                    ) : null}\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-calendar\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"date\"\n                      placeholder=\"DOB\"\n                      name=\"dob\"\n                      {...formik.getFieldProps(\"dob\")}\n                      invalid={formik.touched.dob && !!formik.errors.dob}\n                    />\n                    {formik.touched.dob && formik.errors.dob ? (\n                      <CInvalidFeedback>{formik.errors.dob}</CInvalidFeedback>\n                    ) : null}\n                  </CInputGroup>\n                  <CButton\n                    type=\"submit\"\n                    disabled={!formik.isValid}\n                    color=\"success\"\n                    block\n                  >\n                    Create Account\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Register;\n","import axios from \"axios\";\nimport localStorageService from \"./LocalStorageService\";\n\naxios.defaults.baseURL =\n  process.env.REACT_APP_API_URL || \"http://localhost:3000/api/v1/\";\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorageService.getAccessToken();\n    if (token) {\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\nexport default axios;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}